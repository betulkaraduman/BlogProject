#pragma checksum "C:\Users\MONSTER\MyProjects\NetCore\BlogProject\BlogCoreProject\Areas\Admin\Views\Writer\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "0861ebe1d115cfbccc10e5ba781c36b26ce64663"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Areas_Admin_Views_Writer_Index), @"mvc.1.0.view", @"/Areas/Admin/Views/Writer/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\MONSTER\MyProjects\NetCore\BlogProject\BlogCoreProject\Areas\Admin\Views\_ViewImports.cshtml"
using BlogCoreProject.Areas.Admin;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\MONSTER\MyProjects\NetCore\BlogProject\BlogCoreProject\Areas\Admin\Views\_ViewImports.cshtml"
using BlogCoreProject.Areas.Admin.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"0861ebe1d115cfbccc10e5ba781c36b26ce64663", @"/Areas/Admin/Views/Writer/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"c29a0a3f94a72d5c84cc9fb98dc0bb9d4343ea85", @"/Areas/Admin/Views/_ViewImports.cshtml")]
    public class Areas_Admin_Views_Writer_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n");
#nullable restore
#line 2 "C:\Users\MONSTER\MyProjects\NetCore\BlogProject\BlogCoreProject\Areas\Admin\Views\Writer\Index.cshtml"
  
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/AdminLayout.cshtml";

#line default
#line hidden
#nullable disable
            WriteLiteral(@"

<button class=""btn btn-primary"" type=""button"" id=""btnGetList"">Writer List</button>
<button class=""btn btn-secondary"" type=""button"" id=""btnGetById"">Writer</button>
<button class=""btn btn-success"" type=""button"" id=""btnAddWriter"">Add Writer</button>
<button class=""btn btn-warning"" type=""button"" id=""btnDeleteWriter"">Delete Writer</button>
<button class=""btn btn-info"" type=""button"" id=""btnUpdateWriter"">Update Writer</button>
<br />
<br />
<h4>All Writer</h4>
<br />
<div id=""writerList""></div>
<br />
<br />
<h4>Writer</h4>
<div id=""writerGet""></div>
<div>
    <input type=""text"" id=""WriterId"" placeholder=""Please Enter Writer Id"" class=""form-control"" />
</div>
<br />
<h4>New Writer Info</h4>
<div>
    <input type=""text"" class=""form-control"" id=""txtWriterId"" placeholder=""Writer Id"" /><br />
    <input type=""text"" class=""form-control"" id=""txtWriterName"" placeholder=""Writer Name"" />
</div>
<br />
<br />
<h4>Delete Writer</h4>
<div>
    <input type=""text"" id=""DeleteWriterId"" placeholder=""Pl");
            WriteLiteral(@"ease Enter Writer Id For Delete"" class=""form-control"" />
</div>
<br />
<br />
<h4>Update Writer</h4>
<div>
    <input type=""text"" id=""UpdateWriterId"" placeholder=""Please Enter Writer Id For Update"" class=""form-control"" />
    <input type=""text"" id=""UpdateWriterName"" placeholder=""Please Enter Writer Name For Update"" class=""form-control"" />
</div>



");
            DefineSection("scripts", async() => {
                WriteLiteral(@"
    <script>

        $(""#btnGetList"").click(function () {
            $.ajax({
                contentType: 'application/json',
                dataType: 'JSON',
                method: 'GET',
                url: '/Admin/Writer/WriterList',
                success: function (func) {
                    let w = jQuery.parseJSON(func);
                    console.log(w);
                    let tableHtml = ""<table class='table table-bordered'> <tr><th>Writer Id</th><th>Writer Name</th></tr>""
                    $.each(w, (index, value) => {
                        tableHtml += `<tr><td>${value.Id}</td><td>${value.Name}</td></tr>`
                    });
                    tableHtml += ""</table>"";
                    $(""#writerList"").html(tableHtml);

                }

            });
        })

        $(""#btnGetById"").click(x => {
            let WriterId = $(""#WriterId"").val();
            $.ajax({
                contentType: 'application/json',
                dataType: 'JS");
                WriteLiteral(@"ON',
                method: 'GET',
                url: '/Admin/Writer/GetWriterById/',
                data: { WriterId: WriterId },
                success: function (writer) {

                    let w = jQuery.parseJSON(writer);
                    let tableHtml = ""<table class='table table-bordered'> <tr><th>Writer Id</th><th>Writer Name</th></tr>""
                    tableHtml += `<tr><td>${w.Id}</td><td>${w.Name}</td></tr>`
                    tableHtml += ""</table>"";

                    $(""#writerGet"").html(tableHtml);
                }
            })
        })

        $(""#btnAddWriter"").click(function () {
            let writer = {
                Id: $(""#txtWriterId"").val(),
                Name: $(""#txtWriterName"").val()
            };
            console.log(writer);
            $.ajax({
                type: 'POST',
                dataType: 'JSON',
                url: '/Admin/Writer/AddWriter/',
                data: writer,
                success: function (fu");
                WriteLiteral(@"nc) {
                    let result = jQuery.parseJSON(func);
                    alert(""Writer addes"");
                }
            })
        })

        $(""#btnDeleteWriter"").click(x => {
            let WriterId = $(""#DeleteWriterId"").val();
            console.log(WriterId);
            $.ajax({
                method: 'POST',
                dataType: 'JSON',
                url: '/Admin/Writer/DeleteWriter/',
                data: { WriterId: WriterId },
                success: function (func) {
                    alert(""Writer deleted"");
                }
            });
        })

        $(""#btnUpdateWriter"").click(x => {
            let Writer = {
                Id: $(""#UpdateWriterId"").val(),
                Name: $(""#UpdateWriterName"").val()
            }
            $.ajax({
                method: 'POST',
                dataType: 'JSON',
                url: '/Admin/Writer/UpdateWriter/',
                data: Writer,
                success: function (fun");
                WriteLiteral("c) {\r\n                    var writer = jQuery.parseJSON(func);\r\n                    alert(`Updated id ${writer.Id} `);\r\n                }\r\n            })\r\n        })\r\n    </script>\r\n\r\n");
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
